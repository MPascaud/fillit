...#
...#
...#
...#

.##.
.#..
.#..
....

> Valid

#...
#...
#...
#...

##..
#...
#...
....

> return (char **tetriminos);

typedef struct t_fillit
{
	char *tetrimino;
	int x; //Position actuelle de mon tetrimino
	int y //Same en y
	int sx; //Size en largeur
	int sy; //Hauteur
	t_fillit *next;
}				t_fillit

#...
#...
#...
#...

char *t_fillit list;
int	ret;

ret = 0
ret = ret + lst->sx + lst->x //ret == 1

lst =lst->next;

###.
##..
##..
#...

int nbtetri = 2;
int nbblocks = nbtetri * 4; // 8

int n = 3;
while ((n * n) < nbblocks)
	n++;

// n = 3;

...
...
...

####
.#.##
.#..
....

..##
...#
...#
....

####
....
....
....

#...
#...
#...
#...

block = 8

n = 3;

...
...
... //ON PEUT PAS > On passe au suivant

####
....
....
.... //PAREIL

.....
.....
.....
.....
.....



dabord plus petit carre
ensuite on teste et on augmente petit a petit

